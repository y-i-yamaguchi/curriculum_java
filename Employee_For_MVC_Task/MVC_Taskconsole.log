11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: Serverのバージョン名：Apache Tomcat/9.0.35
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: Server ビルド:          May 5 2020 20:36:20 UTC
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: サーバーのバージョン番号：9.0.35.0
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: OS 名:               Windows 10
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: OS バージョン:            10.0
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: アーキテクチャ:          amd64
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: Java Home:             C:\Users\yamat\Desktop\java_curriculum\pleiades-2020-12-java-win-64bit-jre_20201101\pleiades\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_14.0.2.v20200815-0932\jre
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: JVM バージョン:           14.0.2+12-46
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: JVM ベンダ：            Oracle Corporation
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: CATALINA_BASE:         C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: CATALINA_HOME:         C:\apache-tomcat-9.0.35
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: コマンドライン引数：-Dcatalina.base=C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: コマンドライン引数：-Dcatalina.home=C:\apache-tomcat-9.0.35
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: コマンドライン引数：-Dwtp.deploy=C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: コマンドライン引数：-Dfile.encoding=UTF-8
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.VersionLoggerListener log
情報: コマンドライン引数：-XX:+ShowCodeDetailsInExceptionMessages
11月 15, 2020 6:58:41 午後 org.apache.catalina.core.AprLifecycleListener lifecycleEvent
情報: APRバージョン[1.7.0]を使用してAPRベースのApache Tomcatネイティブライブラリ[1.2.24]をロードしました。
11月 15, 2020 6:58:41 午後 org.apache.catalina.core.AprLifecycleListener lifecycleEvent
情報: APR機能：IPv6 [true]、sendfile true]、受け入れフィルタ[false]、ランダム[true]
11月 15, 2020 6:58:41 午後 org.apache.catalina.core.AprLifecycleListener lifecycleEvent
情報: APR/OpenSSL設定：useAprConnector [false]、useOpenSSL [true]
11月 15, 2020 6:58:41 午後 org.apache.catalina.core.AprLifecycleListener initializeSSL
情報: OpenSSLは[OpenSSL 1.1.1g  21 Apr 2020]を正常に初期化しました。
11月 15, 2020 6:58:41 午後 org.apache.coyote.AbstractProtocol init
情報: プロトコルハンドラ ["http-nio-8090"] を初期化します。
11月 15, 2020 6:58:41 午後 org.apache.catalina.startup.Catalina load
情報: サーバーの初期化 [1,580]ms
11月 15, 2020 6:58:41 午後 org.apache.catalina.core.StandardService startInternal
情報: サービス [Catalina] を起動します
11月 15, 2020 6:58:41 午後 org.apache.catalina.core.StandardEngine startInternal
情報: サーブレットエンジンの起動：[Apache Tomcat/9.0.35]
11月 15, 2020 6:58:42 午後 org.apache.jasper.servlet.TldScanner scanJars
情報: 少なくとも1つのJARが、まだTLDを含んでいないTLDについてスキャンされました。 スキャンしたが、そこにTLDが見つからなかったJARの完全なリストについては、このロガーのデバッグログを有効にしてください。 スキャン中に不要なJARをスキップすると、起動時間とJSPのコンパイル時間が改善されます。
11月 15, 2020 6:58:43 午後 org.apache.jasper.servlet.TldScanner scanJars
情報: 少なくとも1つのJARが、まだTLDを含んでいないTLDについてスキャンされました。 スキャンしたが、そこにTLDが見つからなかったJARの完全なリストについては、このロガーのデバッグログを有効にしてください。 スキャン中に不要なJARをスキップすると、起動時間とJSPのコンパイル時間が改善されます。
11月 15, 2020 6:58:43 午後 org.apache.coyote.AbstractProtocol start
情報: プロトコルハンドラー ["http-nio-8090"] を開始しました。
11月 15, 2020 6:58:43 午後 org.apache.catalina.startup.Catalina start
情報: サーバーの起動 [1,424]ms
11月 15, 2020 6:58:46 午後 org.apache.catalina.core.StandardWrapperValve invoke
重大: パス[/MVC_Task]を持つコンテキスト内のサーブレット[jsp]のServlet.service() が例外[JSPのクラスをコンパイルできません: 

生成されたJavaファイル：[C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost\MVC_Task\org\apache\jsp\login_jsp.java]の[17]行でエラーが発生しました。
Only a type can be imported. skillcheck.bean.ResponseBean resolves to a package

生成されたJavaファイル：[C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost\MVC_Task\org\apache\jsp\login_jsp.java]の[18]行でエラーが発生しました。
Only a type can be imported. skillcheck.bean.EmployeeBean resolves to a package

生成されたJavaファイル：[C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost\MVC_Task\org\apache\jsp\login_jsp.java]の[19]行でエラーが発生しました。
Only a type can be imported. skillcheck.logger.Logger resolves to a package

JSPファイル: [/login.jsp] の中の[13]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
10:     //リクエストより社員番号を取得: 関数型インターフェース（ラムダ式）
11:     Function<HttpServletRequest, Object[]> rmdGetResponseInfo = (rmdRequest) -> {
12:         // request: responseBean
13:         ResponseBean rb = (ResponseBean) request.getAttribute("responseBean");
14:         int requestStatus = 0;
15:         String message = "";
16:         String empId = "";


JSPファイル: [/login.jsp] の中の[13]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
10:     //リクエストより社員番号を取得: 関数型インターフェース（ラムダ式）
11:     Function<HttpServletRequest, Object[]> rmdGetResponseInfo = (rmdRequest) -> {
12:         // request: responseBean
13:         ResponseBean rb = (ResponseBean) request.getAttribute("responseBean");
14:         int requestStatus = 0;
15:         String message = "";
16:         String empId = "";


JSPファイル: [/login.jsp] の中の[20]行目でエラーが発生しました
EmployeeBean cannot be resolved to a type
17:         if (Objects.nonNull(rb)) {
18:             requestStatus = rb.getRequestStaus();
19:             message = rb.getMessage();
20:             EmployeeBean emp = rb.getEmplyeeBeanList().stream().findFirst().orElse(null);
21:             if (Objects.nonNull(emp)) empId = emp.getEmpId();
22:         }
23:         return new Object[]{requestStatus, message, empId};


JSPファイル: [/login.jsp] の中の[26]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
23:         return new Object[]{requestStatus, message, empId};
24:     };
25: 
26:     ResponseBean responseBean = null;
27:     // エラーメッセージ表示用
28:     String message = "";
29:     int requestStatus = 0;


JSPファイル: [/login.jsp] の中の[34]行目でエラーが発生しました
Logger cannot be resolved
31: 
32:     try {
33:         if (Objects.isNull(session) || session.isNew()) {
34:             Logger.log(new Throwable(), "セッションなし");
35:             Object[] objects = rmdGetResponseInfo.apply(request);
36:             requestStatus = (int) objects[0];
37:             message = (String) objects[1];


JSPファイル: [/login.jsp] の中の[40]行目でエラーが発生しました
Logger cannot be resolved
37:             message = (String) objects[1];
38:             empId = (String) objects[2];
39:         } else {
40:             Logger.log(new Throwable(), "セッションあり");
41:             // session: redirect
42:             final String redirect = (String) session.getAttribute("redirect");
43:             if (Objects.nonNull(redirect)) {


JSPファイル: [/login.jsp] の中の[44]行目でエラーが発生しました
Logger cannot be resolved
41:             // session: redirect
42:             final String redirect = (String) session.getAttribute("redirect");
43:             if (Objects.nonNull(redirect)) {
44:                 Logger.log(new Throwable(), "redirect = " + redirect);
45:                 message = redirect;
46:                 session.invalidate();
47:             }


JSPファイル: [/login.jsp] の中の[51]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
48: 
49:             if (requestStatus < 2 && message.isEmpty()) {
50:                 // ログインエラー時
51:                 ResponseBean rb = (ResponseBean) session.getAttribute("responseBean");
52:                 if (Objects.nonNull(rb)) {
53:                     requestStatus = rb.getRequestStaus();
54:                     message = rb.getMessage();


JSPファイル: [/login.jsp] の中の[51]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
48: 
49:             if (requestStatus < 2 && message.isEmpty()) {
50:                 // ログインエラー時
51:                 ResponseBean rb = (ResponseBean) session.getAttribute("responseBean");
52:                 if (Objects.nonNull(rb)) {
53:                     requestStatus = rb.getRequestStaus();
54:                     message = rb.getMessage();


JSPファイル: [/login.jsp] の中の[55]行目でエラーが発生しました
EmployeeBean cannot be resolved to a type
52:                 if (Objects.nonNull(rb)) {
53:                     requestStatus = rb.getRequestStaus();
54:                     message = rb.getMessage();
55:                     EmployeeBean emp = rb.getEmplyeeBeanList().stream().findFirst().orElse(null);
56:                     if (Objects.nonNull(emp)) {
57:                         empId = emp.getEmpId();
58:                     }


JSPファイル: [/login.jsp] の中の[61]行目でエラーが発生しました
Logger cannot be resolved
58:                     }
59:                 }
60:             }
61:             Logger.log(new Throwable(), "message = " + message);
62:         }
63:     } catch (Exception e) {
64:         Logger.log(new Throwable(), e);


JSPファイル: [/login.jsp] の中の[64]行目でエラーが発生しました
Logger cannot be resolved
61:             Logger.log(new Throwable(), "message = " + message);
62:         }
63:     } catch (Exception e) {
64:         Logger.log(new Throwable(), e);
65:     }
66: %>
67: <!DOCTYPE html>


Stacktrace:]が根本的要因と共に投げられました。
org.apache.jasper.JasperException: JSPのクラスをコンパイルできません: 

生成されたJavaファイル：[C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost\MVC_Task\org\apache\jsp\login_jsp.java]の[17]行でエラーが発生しました。
Only a type can be imported. skillcheck.bean.ResponseBean resolves to a package

生成されたJavaファイル：[C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost\MVC_Task\org\apache\jsp\login_jsp.java]の[18]行でエラーが発生しました。
Only a type can be imported. skillcheck.bean.EmployeeBean resolves to a package

生成されたJavaファイル：[C:\Users\yamat\Desktop\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost\MVC_Task\org\apache\jsp\login_jsp.java]の[19]行でエラーが発生しました。
Only a type can be imported. skillcheck.logger.Logger resolves to a package

JSPファイル: [/login.jsp] の中の[13]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
10:     //リクエストより社員番号を取得: 関数型インターフェース（ラムダ式）
11:     Function<HttpServletRequest, Object[]> rmdGetResponseInfo = (rmdRequest) -> {
12:         // request: responseBean
13:         ResponseBean rb = (ResponseBean) request.getAttribute("responseBean");
14:         int requestStatus = 0;
15:         String message = "";
16:         String empId = "";


JSPファイル: [/login.jsp] の中の[13]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
10:     //リクエストより社員番号を取得: 関数型インターフェース（ラムダ式）
11:     Function<HttpServletRequest, Object[]> rmdGetResponseInfo = (rmdRequest) -> {
12:         // request: responseBean
13:         ResponseBean rb = (ResponseBean) request.getAttribute("responseBean");
14:         int requestStatus = 0;
15:         String message = "";
16:         String empId = "";


JSPファイル: [/login.jsp] の中の[20]行目でエラーが発生しました
EmployeeBean cannot be resolved to a type
17:         if (Objects.nonNull(rb)) {
18:             requestStatus = rb.getRequestStaus();
19:             message = rb.getMessage();
20:             EmployeeBean emp = rb.getEmplyeeBeanList().stream().findFirst().orElse(null);
21:             if (Objects.nonNull(emp)) empId = emp.getEmpId();
22:         }
23:         return new Object[]{requestStatus, message, empId};


JSPファイル: [/login.jsp] の中の[26]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
23:         return new Object[]{requestStatus, message, empId};
24:     };
25: 
26:     ResponseBean responseBean = null;
27:     // エラーメッセージ表示用
28:     String message = "";
29:     int requestStatus = 0;


JSPファイル: [/login.jsp] の中の[34]行目でエラーが発生しました
Logger cannot be resolved
31: 
32:     try {
33:         if (Objects.isNull(session) || session.isNew()) {
34:             Logger.log(new Throwable(), "セッションなし");
35:             Object[] objects = rmdGetResponseInfo.apply(request);
36:             requestStatus = (int) objects[0];
37:             message = (String) objects[1];


JSPファイル: [/login.jsp] の中の[40]行目でエラーが発生しました
Logger cannot be resolved
37:             message = (String) objects[1];
38:             empId = (String) objects[2];
39:         } else {
40:             Logger.log(new Throwable(), "セッションあり");
41:             // session: redirect
42:             final String redirect = (String) session.getAttribute("redirect");
43:             if (Objects.nonNull(redirect)) {


JSPファイル: [/login.jsp] の中の[44]行目でエラーが発生しました
Logger cannot be resolved
41:             // session: redirect
42:             final String redirect = (String) session.getAttribute("redirect");
43:             if (Objects.nonNull(redirect)) {
44:                 Logger.log(new Throwable(), "redirect = " + redirect);
45:                 message = redirect;
46:                 session.invalidate();
47:             }


JSPファイル: [/login.jsp] の中の[51]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
48: 
49:             if (requestStatus < 2 && message.isEmpty()) {
50:                 // ログインエラー時
51:                 ResponseBean rb = (ResponseBean) session.getAttribute("responseBean");
52:                 if (Objects.nonNull(rb)) {
53:                     requestStatus = rb.getRequestStaus();
54:                     message = rb.getMessage();


JSPファイル: [/login.jsp] の中の[51]行目でエラーが発生しました
ResponseBean cannot be resolved to a type
48: 
49:             if (requestStatus < 2 && message.isEmpty()) {
50:                 // ログインエラー時
51:                 ResponseBean rb = (ResponseBean) session.getAttribute("responseBean");
52:                 if (Objects.nonNull(rb)) {
53:                     requestStatus = rb.getRequestStaus();
54:                     message = rb.getMessage();


JSPファイル: [/login.jsp] の中の[55]行目でエラーが発生しました
EmployeeBean cannot be resolved to a type
52:                 if (Objects.nonNull(rb)) {
53:                     requestStatus = rb.getRequestStaus();
54:                     message = rb.getMessage();
55:                     EmployeeBean emp = rb.getEmplyeeBeanList().stream().findFirst().orElse(null);
56:                     if (Objects.nonNull(emp)) {
57:                         empId = emp.getEmpId();
58:                     }


JSPファイル: [/login.jsp] の中の[61]行目でエラーが発生しました
Logger cannot be resolved
58:                     }
59:                 }
60:             }
61:             Logger.log(new Throwable(), "message = " + message);
62:         }
63:     } catch (Exception e) {
64:         Logger.log(new Throwable(), e);


JSPファイル: [/login.jsp] の中の[64]行目でエラーが発生しました
Logger cannot be resolved
61:             Logger.log(new Throwable(), "message = " + message);
62:         }
63:     } catch (Exception e) {
64:         Logger.log(new Throwable(), e);
65:     }
66: %>
67: <!DOCTYPE html>


Stacktrace:
	at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:103)
	at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:213)
	at org.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:528)
	at org.apache.jasper.compiler.Compiler.compile(Compiler.java:392)
	at org.apache.jasper.compiler.Compiler.compile(Compiler.java:362)
	at org.apache.jasper.compiler.Compiler.compile(Compiler.java:346)
	at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:605)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:400)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)

